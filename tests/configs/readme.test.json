{
  "Implementation examples (readme.md)": [
    {
      "id": "0025",
      "name": "Sequential scripts",
      "tests": [
        {
          "id": "0025-00",
          "lifecycle": "start",
          "npm-args": "build-stuff"
        }
      ]
    },
    {
      "id": "0026",
      "name": "Change directory",
      "tests": [
        {
          "id": "0026-00",
          "lifecycle": "start",
          "npm-args": "build-stuff"
        }
      ]
    },
    {
      "id": "0027",
      "name": "Parameters and functions",
      "tests": [
        {
          "id": "0027-00",
          "lifecycle": "start",
          "npm-args": "serve"
        },
        {
          "id": "0027-01",
          "lifecycle": "start",
          "npm-args": "serve::tst"
        },
        {
          "id": "0027-02",
          "lifecycle": "start",
          "npm-args": "serve:hva:prd"
        }
      ]
    },
    {
      "id": "0028",
      "name": "Reference scripts",
      "tests": [
        {
          "id": "0028-00",
          "lifecycle": "start",
          "npm-args": "deploy:tst"
        }
      ]
    },
    {
      "id": "0029",
      "name": "Environment values and special commands",
      "sanatize": true,
      "tests": [
        {
          "id": "0029-00",
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": [
            "grep example",
            "Version: $version",
            "Platform: $platform",
            "Time: 2019-09-16 10:33:20.628",
            "--------------------------------",
            "Color: \u001b[94mBlue",
            "Color: Bold",
            "Color: Cyan",
            "Color: Dim",
            "",
            "Color: Green",
            "Color: \u001b[31mRed",
            "Color: \u001b[33mYellow",
            "--------------------------------",
            "Current: 2019-09-16 10:33:42.285",
            "Elapsed: 137ms"
          ]
        }
      ]
    },
    {
      "id": "0030",
      "name": "Environment and command line argument values",
      "sanatize": true,
      "tests": [
        {
          "id": "0030-00",
          "lifecycle": "start",
          "npm-args": [
            "build-stuff",
            "arg1",
            "arg2",
            "arg3"
          ]
        },
        {
          "id": "0030-01",
          "lifecycle": "start",
          "npm-args": [
            "echo",
            "arg1",
            "arg2",
            "arg3"
          ]
        }
      ]
    },
    {
      "id": "0031",
      "name": "Environment String Manipulation and Expanding Variables",
      "sanatize": true,
      "tests": [
        {
          "id": "0031-00",
          "lifecycle": "start",
          "npm-args": [
            "build-stuff",
            "arg1",
            "ARG2",
            "arg3"
          ]
        }
      ]
    },
    {
      "id": "0032",
      "name": "Glob patterns",
      "tests": [
        {
          "id": "0032-00",
          "lifecycle": "start",
          "npm-args": "build-stuff"
        }
      ]
    },
    {
      "id": "0033",
      "name": "Launch arguments, command arguments, parameters and arguments",
      "tests": [
        {
          "id": "0033-00",
          "lifecycle": "start",
          "npm-args": [
            "build-stuff:param1:param2",
            "arg1",
            "arg2",
            "arg3"
          ]
        }
      ]
    },
    {
      "id": "0034",
      "name": "Escaping characters",
      "tests": [
        {
          "id": "0034-00",
          "lifecycle": "start",
          "npm-args": [
            "escaping",
            "arg1"
          ],
          "result:win32": [
            "\"$1                        \" : arg1",
            "\"$npm_config_node_version  \" : $node_version",
            "\"${1}                      \" : arg1",
            "${npm_config_node_version} : $node_version"
          ]
        }
      ]
    },
    {
      "id": "0035",
      "name": "Concurrent scripts",
      "transformer": "concurrentScripts",
      "tests": [
        {
          "id": "0035-00",
          "lifecycle": "start",
          "npm-args": "build-stuff"
        }
      ]
    },
    {
      "id": "0036",
      "name": "Inline script blocks",
      "transformer": "inlineScriptBlocks",
      "tests": [
        {
          "id": "0036-00",
          "lifecycle": "start",
          "npm-args": "build-stuff"
        }
      ]
    },
    {
      "id": "0037",
      "name": "Condition and exclusion constraints",
      "files": {
        "launcher-settings": {
          "options": {
            "logLevel": 0
          }
        }
      },
      "tests": [
        {
          "id": "0037-00",
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result:win32": [
            "'node_modules_test' is not recognized as an internal or external command,\r\noperable program or batch file.",
            "npm install",
            "npm start",
            "Test platform type."
          ]
        }
      ]
    },
    {
      "id": "0038",
      "name": "Confirmation prompt",
      "sanatize": true,
      "tests": [
        {
          "id": "0038-00",
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "cmd-args": "confirm"
        },
        {
          "id": "0038-01",
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "cmd-args": "--confirm=true",
          "result": [
            "✔ Are you sure you want to continue ... yes",
            "You are sure!"
          ]
        },
        {
          "id": "0038-02",
          "name2": "npm start build-stuff --confirm=false",
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "cmd-args": "--confirm=false",
          "result": [
            "✔ Are you sure you want to continue ... no",
            "You are not sure!"
          ]
        }
      ]
    },
    {
      "id": "0039",
      "name": "Repeaters (String)",
      "tests": [
        {
          "id": "0039-00",
          "lifecycle": "start",
          "npm-args": "ping"
        }
      ]
    },
    {
      "id": "0040",
      "name": "Repeaters (Object)",
      "tests": [
        {
          "id": "0040-00",
          "lifecycle": "start",
          "npm-args": "ping"
        }
      ]
    },
    {
      "id": "0041",
      "name": "Interactive menu",
      "sanatize": true,
      "files": {
        "launcher-settings": {
          "options": {
            "menu": {
              "timeout": 1,
              "confirm": false
            }
          }
        }
      },
      "tests": [
        {
          "id": "0041-00",
          "lifecycle": "start",
          "result": [
            "? Select organization › - Use arrow-keys. Return to submit.\n    uva\n❯   \u001b[4mhva\u001b[24m - Amsterdam University of Applied Sciences.\n",
            "✔ Select organization › hva",
            "",
            "Executing: npm start serve:hva:dev",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        },
        {
          "id": "0041-01",
          "lifecycle": "start",
          "npm-args": "menu",
          "result": [
            "? Select organization › - Use arrow-keys. Return to submit.\n    uva\n❯   \u001b[4mhva\u001b[24m - Amsterdam University of Applied Sciences.\n",
            "✔ Select organization › hva",
            "",
            "Executing: npm start serve:hva:dev",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        },
        {
          "id": "0041-02",
          "lifecycle": "start",
          "npm-args": [
            "menu",
            "uva:acceptance"
          ],
          "result": [
            "? Select organization › - Use arrow-keys. Return to submit.\n❯   \u001b[4muva\u001b[24m - University of Amsterdam.\n    hva\n",
            "✔ Select organization › uva",
            "? Select environment › - Use arrow-keys. Return to submit.\n    development\n❯   \u001b[4macceptance\u001b[24m\n    production\n",
            "✔ Select environment › acceptance",
            "",
            "Executing: npm start serve:uva:acc",
            "",
            "ng serve uva -c=acc"
          ]
        }
      ]
    },
    {
      "id": "0042",
      "name": "Interactive menu",
      "sanatize": true,
      "files": {
        "launcher-config": {
          "scripts": {
            "serve": "echo Serve script",
            "build": "echo Build script"
          },
          "menu": {
            "serve": "serve",
            "build": "build"
          },
          "options": {
            "menu": {
              "defaultChoice": "build",
              "defaultScript": "build"
            }
          }
        }
      },
      "tests": [
        {
          "id": "0042-00",
          "lifecycle": "start",
          "result": [
            "Auto menu: build                         (Use the menu by running: npm start menu)",
            "Executing: npm start build",
            "",
            "Build script"
          ]
        }
      ]
    },
    {
      "id": "0043",
      "name": "Interactive menu",
      "sanatize": true,
      "files": {
        "launcher-config": {
          "scripts": {
            "serve": "echo Serve script",
            "build": "echo Build script"
          },
          "menu": {
            "serve": "serve",
            "build": "build"
          },
          "options": {
            "menu": {
              "defaultChoice": "build",
              "timeout": 1
            }
          }
        }
      },
      "tests": [
        {
          "id": "0043-00",
          "lifecycle": "start",
          "result": [
            "? Select › - Use arrow-keys. Return to submit.\n    serve\n❯   \u001b[4mbuild\u001b[24m\n",
            "✔ Select › build",
            "",
            "Executing: npm start build",
            "",
            "Build script"
          ]
        }
      ]
    },
    {
      "id": "0044",
      "name": "Interactive menu",
      "sanatize": true,
      "files": {
        "launcher-config": {
          "scripts": {
            "serve:$project:dev": {
              "concurrent": [
                "echo Start development server",
                "echo ng serve $project -c=dev"
              ]
            },
            "serve:$project:$config": "echo ng serve $project -c=$config"
          },
          "menu": {
            "description": "organization",
            "uva": {
              "description": "environment",
              "development": "serve:uva:dev",
              "acceptance": "serve:uva:acc",
              "production": "serve:uva:prd"
            },
            "separator": "",
            "hva": {
              "description": "environment",
              "development": "serve:hva:dev",
              "acceptance": "serve:hva:acc",
              "production": "serve:hva:prd"
            }
          },
          "options": {
            "menu": {
              "defaultScript": "serve:hva:dev",
              "defaultChoice": "hva:development",
              "timeout": 1
            }
          }
        }
      },
      "tests": [
        {
          "id": "0044-00",
          "lifecycle": "start",
          "result": [
            "Auto menu: hva:development               (Use the menu by running: npm start menu)",
            "Executing: npm start serve:hva:dev",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        },
        {
          "id": "0044-01",
          "lifecycle": "start",
          "npm-args": "menu",
          "result": [
            "? Select organization › - Use arrow-keys. Return to submit.\n    uva\n❯   \u001b[4mhva\u001b[24m\n",
            "✔ Select organization › hva",
            "",
            "Executing: npm start serve:hva:dev",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        }
      ]
    },
    {
      "id": "0045",
      "name": "Interactive menu",
      "sanatize": true,
      "files": {
        "launcher-config": {
          "scripts": {
            "serve:$project:dev": {
              "concurrent": [
                "echo Start development server",
                "echo ng serve $project -c=dev"
              ]
            },
            "serve:$project:$config": "echo ng serve $project -c=$config"
          },
          "menu": {
            "description": "organization",
            "uva": {
              "description": "environment",
              "development": "serve:uva:dev",
              "acceptance": "serve:uva:acc",
              "production": "serve:uva:prd"
            },
            "separator": "",
            "hva": {
              "description": "environment",
              "development": "serve:hva:dev",
              "acceptance": "serve:hva:acc",
              "production": "serve:hva:prd"
            }
          },
          "options": {
            "menu": {
              "defaultScript": "serve:hva:dev",
              "defaultChoice": "hva:development",
              "defaultSelect": "uva:acceptance",
              "confirm": false
            }
          }
        }
      },
      "tests": [
        {
          "id": "0045-00",
          "lifecycle": "start",
          "result": [
            "Auto menu: hva:development               (Use the menu by running: npm start menu)",
            "Executing: npm start serve:hva:dev",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        },
        {
          "id": "0045-01",
          "lifecycle": "start",
          "npm-args": "menu",
          "result": [
            "? Select organization › - Use arrow-keys. Return to submit.\n❯   \u001b[4muva\u001b[24m\n    hva\n",
            "✔ Select organization › uva",
            "? Select environment › - Use arrow-keys. Return to submit.\n    development\n❯   \u001b[4macceptance\u001b[24m\n    production\n",
            "✔ Select environment › acceptance",
            "",
            "Executing: npm start serve:uva:acc",
            "",
            "ng serve uva -c=acc"
          ]
        }
      ]
    },
    {
      "id": "0046",
      "name": "Interactive menu",
      "files": {
        "launcher-config": {
          "scripts": {
            "menu": "echo Menu script"
          }
        }
      },
      "tests": [
        {
          "id": "0046-00",
          "lifecycle": "start",
          "npm-args": "menu",
          "result": [
            "Menu script"
          ]
        }
      ]
    },
    {
      "id": "0047",
      "name": "Menu save default script",
      "sanatize": true,
      "tests": [
        {
          "id": "0047-00",
          "lifecycle": "start"
        }
      ]
    },
    {
      "id": "0048",
      "name": "Launcher settings",
      "tests": [
        {
          "id": "0048-00",
          "lifecycle": "start",
          "npm-args": "build:dev"
        },
        {
          "id": "0048-01",
          "lifecycle": "start",
          "npm-args": "build:acc"
        },
        {
          "id": "0048-02",
          "lifecycle": "start",
          "npm-args": "build:production"
        }
      ]
    },
    {
      "id": "0049",
      "name": "Reference scripts by using wildcards",
      "tests": [
        {
          "id": "0049-00",
          "lifecycle": "start",
          "npm-args": "build:*"
        },
        {
          "id": "0049-01",
          "lifecycle": "start",
          "npm-args": "build:all"
        },
        {
          "id": "0049-02",
          "cmd-args": [
            "--concurrent",
            "build:*"
          ]
        }
      ]
    },
    {
      "id": "0050",
      "name": "Launcher arguments",
      "sanatize": true,
      "tests": [
        {
          "id": "0050-00",
          "cmd-args": [
            "--help"
          ]
        }
      ]
    },
    {
      "id": "0051",
      "name": "Launcher Command: init",
      "sanatize": true,
      "files": {
        "package": {}
      },
      "tests": [
        {
          "id": "0051-00",
          "cmd-args": [
            "init"
          ]
        },
        {
          "id": "0051-01",
          "cmd-args": [
            "init",
            "basic"
          ]
        }
      ]
    },
    {
      "id": "0052",
      "name": "Launcher Command: migrate",
      "sanatize": true,
      "files": {
        "package": {
          "scripts": {
            "ng": "echo ng",
            "serve": "echo ng serve",
            "build": "echo ng build",
            "test": "echo ng test",
            "lint": "echo ng lint",
            "e2e": "echo ng e2e",
            "build:uva:dev": "echo ng build uva --configuration=dev",
            "build:uva:tst": "echo ng build uva --configuration=tst",
            "build:uva:acc": "echo ng build uva --configuration=acc",
            "build:uva:prd": "echo ng build uva --configuration=prd --prod",
            "build:hva:dev": "echo ng build hva --configuration=dev",
            "build:hva:tst": "echo ng build hva --configuration=tst",
            "build:hva:acc": "echo ng build hva --configuration=acc",
            "build:hva:prd": "echo ng build hva --configuration=prd --prod",
            "serve:uva:dev": "echo ng serv uva --configuration=dev",
            "serve:uva:tst": "echo ng serv uva --configuration=tst",
            "serve:uva:acc": "echo ng serv uva --configuration=acc",
            "serve:uva:prd": "echo ng serv uva --configuration=prd --prod",
            "serve:hva:dev": "echo ng serv hva --configuration=dev",
            "serve:hva:tst": "echo ng serv hva --configuration=tst",
            "serve:hva:acc": "echo ng serv hva --configuration=acc",
            "serve:hva:prd": "echo ng serv hva --configuration=prd --prod",
            "deploy:uva:dev": "npm run build:uva:dev && echo firebase deploy --public dist/uva --project status-uva-dev",
            "deploy:uva:tst": "npm run build:uva:tst && echo firebase deploy --public dist/uva --project status-uva-tst",
            "deploy:uva:acc": "npm run build:uva:acc && echo firebase deploy --public dist/uva --project status-uva-acc",
            "deploy:uva:prd": "npm run build:uva:prd && echo firebase deploy --public dist/uva --project status-uva-prd",
            "deploy:hva:dev": "npm run build:hva:dev && echo firebase deploy --public dist/hva --project status-hva-dev",
            "deploy:hva:tst": "npm run build:hva:tst && echo firebase deploy --public dist/hva --project status-hva-tst",
            "deploy:hva:acc": "npm run build:hva:acc && echo firebase deploy --public dist/hva --project status-hva-acc",
            "deploy:hva:prd": "npm run build:hva:prd && echo firebase deploy --public dist/hva --project status-hva-prd",
            "deploy:dev": "npm run deploy:uva:dev && npm run deploy:hva:dev",
            "deploy:tst": "npm run deploy:uva:tst && npm run deploy:hva:tst",
            "deploy:acc": "npm run deploy:uva:acc && npm run deploy:hva:acc",
            "deploy:prd": "npm run deploy:uva:prd && npm run deploy:hva:prd",
            "deploy": "echo Deploy all"
          }
        }
      },
      "tests": [
        {
          "id": "0052-00",
          "cmd-args": [
            "migrate",
            "--params=1"
          ]
        }
      ]
    },
    {
      "id": "0053",
      "name": "Launcher Command: script",
      "sanatize": true,
      "files": {
        "launcher-config": {
          "scripts": {
            "build:css": "echo Building: .css files",
            "build:js": "echo Building: .js files",
            "build:html": "echo Building: .html files",
            "build:all": {
              "concurrent": [
                "build:*"
              ]
            }
          }
        }
      },
      "tests": [
        {
          "id": "0053-00",
          "cmd-args": [
            "build:css",
            "build:js"
          ]
        },
        {
          "id": "0053-01",
          "cmd-args": [
            "build:css",
            "build:js",
            "--concurrent"
          ]
        }
      ]
    },
    {
      "id": "0054",
      "name": "Launcher Command: list",
      "files": {
        "launcher-config": {
          "scripts": {
            "serve:$project:dev": {
              "concurrent": [
                "echo Start development server",
                "echo ng serve $project -c=dev"
              ]
            },
            "serve:$project:$config": "echo ng serve $project -c=$config"
          },
          "menu": {
            "description": "organization",
            "uva": {
              "description": "environment",
              "development": "serve:uva:dev",
              "acceptance": "serve:uva:acc",
              "production": "serve:uva:prd"
            },
            "separator": "",
            "hva": {
              "description": "environment",
              "development": "serve:hva:dev",
              "acceptance": "serve:hva:acc",
              "production": "serve:hva:prd"
            }
          }
        }
      },
      "tests": [
        {
          "id": "0054-00",
          "cmd-args": [
            "list",
            "script"
          ]
        },
        {
          "id": "0054-01",
          "cmd-args": [
            "list",
            "menu"
          ]
        },
        {
          "id": "0054-02",
          "cmd-args": [
            "list",
            "complete"
          ]
        }
      ]
    }
  ]
}
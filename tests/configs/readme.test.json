{
  "Implementation examples (readme.md)": [
    {
      "name": "Sequential scripts",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": [
            "Build step 1",
            "Build step 2",
            "Build step 3"
          ]
        }
      ]
    },
    {
      "name": "Change directory",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": "bin common.js config-loader.js executor.js launch-menu.js launch.js LICENSE logger.js package.json README.md scripts.js spawn-process.js templates"
        }
      ]
    },
    {
      "name": "Parameters and functions",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "serve",
          "result": "ng serve uva -c=dev"
        },
        {
          "lifecycle": "start",
          "npm-args": "serve::tst",
          "result": "ng serve uva -c=tst"
        },
        {
          "lifecycle": "start",
          "npm-args": "serve:hva:prd",
          "result": "ng serve hva -c=prd"
        }
      ]
    },
    {
      "name": "Reference scripts",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "deploy:tst",
          "result": [
            "ng build uva -c=tst",
            "firebase deploy --public dist/uva -P uva-tst",
            "ng build hva -c=tst",
            "firebase deploy --public dist/hva -P hva-tst"
          ]
        }
      ]
    },
    {
      "name": "Environment values and special commands",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": [
            "grep example",
            "\u001b[1mVersion:\u001b[0m 1.18.0",
            "\u001b[1mPlatform:\u001b[0m linux",
            "\u001b[1mTime:\u001b[0m 2019-09-16 10:33:20.628",
            "--------------------------------",
            "Color: \u001b[94mBlue\u001b[0m",
            "Color: \u001b[1mBold\u001b[0m",
            "Color: \u001b[36mCyan\u001b[0m",
            "Color: \u001b[2mDim\u001b[0m",
            "",
            "Color: \u001b[32mGreen\u001b[0m",
            "Color: \u001b[31mRed\u001b[0m",
            "Color: \u001b[33mYellow\u001b[0m",
            "--------------------------------",
            "\u001b[1mCurrent:\u001b[0m 2019-09-16 10:33:42.285",
            "\u001b[1mElapsed:\u001b[0m 137ms"
          ],
          "result:win32": [
            "grep example",
            "\u001b[1mVersion:\u001b[0m 1.18.0",
            "\u001b[1mPlatform:\u001b[0m win32",
            "\u001b[1mTime:\u001b[0m 2019-09-16 10:33:20.628",
            "--------------------------------",
            "Color: \u001b[94mBlue\u001b[0m",
            "Color: \u001b[1mBold\u001b[0m",
            "Color: \u001b[36mCyan\u001b[0m",
            "Color: \u001b[90mDim\u001b[0m",
            "",
            "Color: \u001b[32mGreen\u001b[0m",
            "Color: \u001b[31mRed\u001b[0m",
            "Color: \u001b[33mYellow\u001b[0m",
            "--------------------------------",
            "\u001b[1mCurrent:\u001b[0m 2019-09-16 10:33:42.285",
            "\u001b[1mElapsed:\u001b[0m 137ms"
          ]
        }
      ]
    },
    {
      "name": "Environment and command line argument values",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": [
            "build-stuff",
            "arg1",
            "arg2",
            "arg3"
          ],
          "result": [
            "Node version: 10.16.3",
            "Argument 1 : arg1",
            "Argument 2 : arg2",
            "All arguments: arg1 arg2 arg3",
            "Offset arguments: arg2 arg3",
            "Environment : my-env"
          ]
        }
      ]
    },
    {
      "name": "Glob patterns",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": [
            "All files: bin common.js config-loader.js executor.js launch-menu.js launch.js LICENSE logger.js package.json README.md scripts.js spawn-process.js templates",
            "Markdown files: README.md"
          ]
        }
      ]
    },
    {
      "name": "Launch arguments, command arguments, parameters and arguments",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": [
            "build-stuff:param1:param2",
            "arg1",
            "arg2",
            "arg3"
          ],
          "result": [
            "--------------------------------",
            "Parameter 1: param1",
            "Parameter 2: param2",
            "Arguments 1: arg1",
            "Arguments 2: arg2",
            "All arguments: arg1 arg2 arg3",
            "Offset arguments: arg2 arg3",
            "--------------------------------",
            "Function Parameter 1: param1",
            "Function Parameter 2: funcParam",
            "Function Arguments 1: funcArg",
            "Function Arguments 2: arg1",
            "Function All arguments: funcArg arg1",
            "--------------------------------"
          ]
        }
      ]
    },
    {
      "name": "Escaping",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": [
            "escaping",
            "arg1"
          ],
          "result": [
            "$1                         : arg1",
            "$npm_config_node_version   : 10.16.3",
            "${1}                       : arg1",
            "${npm_config_node_version} : 10.16.3"
          ],
          "result:win32": [
            "\"$1                        \" : arg1",
            "\"$npm_config_node_version  \" : 10.16.3",
            "\"${1}                      \" : arg1",
            "${npm_config_node_version} : 10.16.3"
          ]
        }
      ]
    },
    {
      "name": "Concurrent scripts",
      "transformer": "concurrentScripts",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": [
            "Background job : 1",
            "Background job : 2",
            "Sequential job : 3",
            "Sequential job : 4",
            "Completed job : 1",
            "Completed job : 2"
          ]
        }
      ]
    },
    {
      "name": "Inline script blocks",
      "transformer": "inlineScriptBlocks",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": [
            "Background job : 1",
            "Background job : 2",
            "Completed job : 1",
            "Completed job : 2",
            "Sequential job : 3",
            "Sequential job : 4"
          ]
        }
      ]
    },
    {
      "name": "Condition and exclusion constraints",
      "transformer2": "conditionAndExclusionConstraints",
      "files": {
        "launcher-settings": {
          "options": {
            "logLevel": 0
          }
        }
      },
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build-stuff",
          "result": [
            "/bin/sh: 1: node_modules_test: not found",
            "npm install",
            "npm start",
            "Test platform type."
          ],
          "result:win32": [
            "'node_modules_test' is not recognized as an internal or external command,\r\noperable program or batch file.",
            "npm install",
            "npm start",
            "Test platform type."
          ]
        }
      ]
    },
    {
      "name": "Repeaters (String)",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "ping",
          "result": [
            "Action: ping www.google.com",
            "Action: ping duckduckgo.com",
            "Action: ping bing.com"
          ]
        }
      ]
    },
    {
      "name": "Repeaters (Object)",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "ping",
          "result": [
            "Google",
            "--------------------------------",
            "Action: ping www.google.com",
            "",
            "DuckDuckGo",
            "--------------------------------",
            "Action: ping duckduckgo.com",
            "",
            "Bing",
            "--------------------------------",
            "Action: ping bing.com",
            ""
          ]
        }
      ]
    },
    {
      "name": "Interactive menu",
      "files": {
        "launcher-settings": {
          "options": {
            "menu": {
              "timeout": 1
            }
          }
        }
      },
      "tests": [
        {
          "lifecycle": "start",
          "result": [
            "",
            "\u001b[32m?\u001b[39m \u001b[1mSelect organization:\u001b[22m\u001b[0m \u001b[0m\u001b[2m(Use arrow keys)\u001b[22m\n  uva \n  \u001b[2m──────────────\u001b[22m\n\u001b[36m❯ hva\u001b[39m ",
            "\u001b[6D",
            "\u001b[6C",
            "\u001b[s",
            "",
            "",
            "\u001b[1mAuto select in: \u001b[0m1",
            "\u001b[u",
            "",
            "",
            "\u001b[1mExecuting: \u001b[2mnpm start serve:hva:dev\u001b[0m",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ],
          "result:win32": [
            "",
            "\u001b[32m?\u001b[39m \u001b[1mSelect organization:\u001b[22m\u001b[0m \u001b[0m\u001b[2m(Use arrow keys)\u001b[22m\n  uva \n  \u001b[2m──────────────\u001b[22m\n\u001b[36m> hva\u001b[39m ",
            "\u001b[6D",
            "\u001b[6C",
            "\u001b[s",
            "",
            "",
            "\u001b[1mAuto select in: \u001b[0m1",
            "\u001b[u",
            "",
            "",
            "\u001b[1mExecuting: \u001b[90mnpm start serve:hva:dev\u001b[0m",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        }
      ]
    },
    {
      "name": "Interactive menu",
      "files": {
        "launcher-config": {
          "scripts": {
            "serve": "echo Serve script",
            "build": "echo Build script"
          },
          "menu": {
            "serve": "serve",
            "build": "build"
          },
          "options": {
            "menu": {
              "defaultChoice": "build",
              "defaultScript": "build"
            }
          }
        }
      },
      "tests": [
        {
          "lifecycle": "start",
          "result": [
            "\u001b[1mAuto menu: \u001b[2mbuild                       \u001b[0m\u001b[2m  (Use the menu by running:\u001b[1m npm start menu\u001b[0m\u001b[2m)\u001b[0m",
            "\u001b[1mExecuting: \u001b[2mnpm start build\u001b[0m",
            "",
            "Build script"
          ],
          "result:win32": [
            "\u001b[1mAuto menu: \u001b[90mbuild                       \u001b[0m\u001b[90m  (Use the menu by running:\u001b[1m npm start menu\u001b[0m\u001b[90m)\u001b[0m",
            "\u001b[1mExecuting: \u001b[90mnpm start build\u001b[0m",
            "",
            "Build script"
          ]
        }
      ]
    },
    {
      "name": "Interactive menu",
      "files": {
        "launcher-config": {
          "scripts": {
            "serve": "echo Serve script",
            "build": "echo Build script"
          },
          "menu": {
            "serve": "serve",
            "build": "build"
          },
          "options": {
            "menu": {
              "defaultChoice": "build",
              "timeout": 1
            }
          }
        }
      },
      "tests": [
        {
          "lifecycle": "start",
          "result": [
            "",
            "\u001b[32m?\u001b[39m \u001b[1mSelect:\u001b[22m\u001b[0m \u001b[0m\u001b[2m(Use arrow keys)\u001b[22m\n  serve \n\u001b[36m❯ build\u001b[39m ",
            "\u001b[8D",
            "\u001b[8C",
            "\u001b[s",
            "",
            "",
            "\u001b[1mAuto select in: \u001b[0m1",
            "\u001b[u",
            "",
            "",
            "\u001b[1mExecuting: \u001b[2mnpm start build\u001b[0m",
            "",
            "Build script"
          ],
          "result:win32": [
            "",
            "\u001b[32m?\u001b[39m \u001b[1mSelect:\u001b[22m\u001b[0m \u001b[0m\u001b[2m(Use arrow keys)\u001b[22m\n  serve \n\u001b[36m> build\u001b[39m ",
            "\u001b[8D",
            "\u001b[8C",
            "\u001b[s",
            "",
            "",
            "\u001b[1mAuto select in: \u001b[0m1",
            "\u001b[u",
            "",
            "",
            "\u001b[1mExecuting: \u001b[90mnpm start build\u001b[0m",
            "",
            "Build script"
          ]
        }
      ]
    },
    {
      "name": "Interactive menu",
      "files": {
        "launcher-config": {
          "scripts": {
            "serve:$project:dev": {
              "concurrent": [
                "echo Start development server",
                "echo ng serve $project -c=dev"
              ]
            },
            "serve:$project:$config": "echo ng serve $project -c=$config"
          },
          "menu": {
            "description": "organization",
            "uva": {
              "description": "environment",
              "development": "serve:uva:dev",
              "acceptance": "serve:uva:acc",
              "production": "serve:uva:prd"
            },
            "separator": "",
            "hva": {
              "description": "environment",
              "development": "serve:hva:dev",
              "acceptance": "serve:hva:acc",
              "production": "serve:hva:prd"
            }
          },
          "options": {
            "menu": {
              "defaultScript": "serve:hva:dev",
              "defaultChoice": "hva:development",
              "timeout": 1
            }
          }
        }
      },
      "tests": [
        {
          "lifecycle": "start",
          "result": [
            "\u001b[1mAuto menu: \u001b[2mhva:development             \u001b[0m\u001b[2m  (Use the menu by running:\u001b[1m npm start menu\u001b[0m\u001b[2m)\u001b[0m",
            "\u001b[1mExecuting: \u001b[2mnpm start serve:hva:dev\u001b[0m",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ],
          "result:win32": [
            "\u001b[1mAuto menu: \u001b[90mhva:development             \u001b[0m\u001b[90m  (Use the menu by running:\u001b[1m npm start menu\u001b[0m\u001b[90m)\u001b[0m",
            "\u001b[1mExecuting: \u001b[90mnpm start serve:hva:dev\u001b[0m",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        },
        {
          "lifecycle": "start",
          "npm-args": "menu",
          "result": [
            "",
            "\u001b[32m?\u001b[39m \u001b[1mSelect organization:\u001b[22m\u001b[0m \u001b[0m\u001b[2m(Use arrow keys)\u001b[22m\n  uva \n  \u001b[2m──────────────\u001b[22m\n\u001b[36m❯ hva\u001b[39m ",
            "\u001b[6D",
            "\u001b[6C",
            "\u001b[s",
            "",
            "",
            "\u001b[1mAuto select in: \u001b[0m1",
            "\u001b[u",
            "",
            "",
            "\u001b[1mExecuting: \u001b[2mnpm start serve:hva:dev\u001b[0m",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ],
          "result:win32": [
            "",
            "\u001b[32m?\u001b[39m \u001b[1mSelect organization:\u001b[22m\u001b[0m \u001b[0m\u001b[2m(Use arrow keys)\u001b[22m\n  uva \n  \u001b[2m──────────────\u001b[22m\n\u001b[36m> hva\u001b[39m ",
            "\u001b[6D",
            "\u001b[6C",
            "\u001b[s",
            "",
            "",
            "\u001b[1mAuto select in: \u001b[0m1",
            "\u001b[u",
            "",
            "",
            "\u001b[1mExecuting: \u001b[90mnpm start serve:hva:dev\u001b[0m",
            "",
            "Start development server",
            "ng serve hva -c=dev"
          ]
        }
      ]
    },
    {
      "name": "Interactive menu",
      "files": {
        "launcher-config": {
          "scripts": {
            "menu": "echo Menu script"
          }
        }
      },
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "menu",
          "result": [
            "Menu script"
          ]
        }
      ]
    },
    {
      "name": "Launcher settings",
      "tests": [
        {
          "lifecycle": "start",
          "npm-args": "build:dev",
          "result": [
            "name: example",
            "version: 2.0.0",
            "ng build -c=dev --deploy-url example.dev.com",
            "",
            "Deploying to: server1.dev.com",
            "Deploying to: server2.dev.com"
          ]
        },
        {
          "lifecycle": "start",
          "npm-args": "build:acc",
          "result": [
            "name: example",
            "version: 1.9.0",
            "ng build -c=acc --deploy-url example.acc.com",
            "",
            "Deploying to: server1.acc.com",
            "Deploying to: server2.acc.com"
          ]
        },
        {
          "lifecycle": "start",
          "npm-args": "build:production",
          "result": [
            "name: example",
            "version: 1.8.0",
            "ng build -c=production --deploy-url example.prd.com",
            "",
            "Deploying to: server1.prd.com",
            "Deploying to: server2.prd.com"
          ]
        }
      ]
    }
  ]
}